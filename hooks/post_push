#!/bin/bash

# This is the file triggered by Docker Hub after building the initial image.

DPWD=$(pwd)
PART="sys"

# Make sure only tagged commits triggers logic in hooks files.
if [ "$SOURCE_BRANCH" = "master" ]; then
    exit
fi

# tag [intial tag] [extra tag]
function tag {
  # Perform tagging
  echos "Tag:   $1 => $(real $2)"
  docker tag $DOCKER_REPO:$1 $DOCKER_REPO:$(real $2)

  # Push tag
  push $2
}

# build [inital tag] [Dockerfile extension] [extra tags...]
function build {
  # Perform build
  build_only $1 $2

  # Push build
  push $1

  # Add extra tags
  for t in ${@:3}; do
    tag $1 "$t"
  done
}

# build_only [initial tag] [Dockerfile extension]
function build_only {
  # Detect Dockerfile extension if not set.
  name=$2
  if [ "$2" = "" ] || [ "$2" = "-" ]; then
    if [ -e "Dockerfile-gen-$1" ]; then
      name="gen-$1"
    else
      name=$1
    fi
  fi

  # Perform build
  echos "Build: $1 (Dockerfile-$name)"
  if [ "$DEBUG" = "true" ]; then
    docker build -t $DOCKER_REPO:$1 -f Dockerfile-$name .
  else
    docker build -t $DOCKER_REPO:$1 -f Dockerfile-$name . > /dev/null
  fi
}

# push [tag]
function push {
  # Figure out full image identififer.
  img=$DOCKER_REPO:$(real $1)

  if [ "$CI" != "true" ]; then
    # Acually push when not in a CI environment.
    echos "       Push: $img"
    docker push $img > /dev/null
  else
    # Simple logging in CI environment with debug enabled.
    if [ "$DEBUG" = "true" ]; then
      echos "       Push: $img (skipped)"
    fi
  fi
}

# real [tag]
function real {
  echo $1 | sed -e "s/\[version\]/${SOURCE_BRANCH}/g"
}

# template [tp] [target] [from]
function template {
  cat $DPWD/lib/template/Dockerfile-$1 \
  | sed -e "s|\[from\]|${DOCKER_REPO}:${3}|g" \
  > Dockerfile-gen-$2
}

# trigger [dir]
function trigger {
  # Go to folder
  cd $DPWD/$1

  if [ ! -e ".skip" ]; then
    # Trigger steps
    for step in "build" "test"; do
      if [ -e "Step-$step" ]; then
        PART="$1:$step"

        source "Step-$step"
        echo
      fi
    done
  fi
}

function test {
  echos "TEST: $@"
  result=$(docker run --rm $2 $DOCKER_REPO:$1 $3)
  count=$(echo $result | grep "$4" | wc -l)

  if [ "$count" = "0" ]; then
    echos "> FAILED: Expected \"$4\", received:"
    echos $result

    exit 1
  else
    echos "> SUCCESS"
  fi
}

function echos {
  echo "[$PART] $@"
}

# Listing some useful commands
echos "CI: $CI"
echos "DOCKER_REPO: $DOCKER_REPO"
echos "SOURCE_BRANCH: $SOURCE_BRANCH"
echo

# Build base images if found
if [ -e lib/base ]; then trigger "lib/base"; fi

# Build distributions provided
for dist in ${DISTS:-$(ls $DPWD/dist)}; do
  trigger "dist/$dist"
done
