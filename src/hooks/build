#!/bin/bash

DPWD=$(pwd)
PART="sys"
PATH="$(dirname $(dirname $(realpath $0)))/bin:$PATH"
TARGET=$(__repo_path)/target

# tag [intial tag] [extra tag]
function tag {
  # Perform tagging
  echos "Tag:   $1 => $(real $2)"
  _docker tag $DOCKER_REPO:$1 $DOCKER_REPO:$(real $2)

  # Push tag
  push $2
}

# build [inital tag] [Dockerfile extension] [extra tags...]
function build {
  # Perform build
  build_only $1 $2

  # Push build
  push $1

  # Add extra tags
  for t in ${@:3}; do
    tag $1 "$t"
  done
}

# build_only [initial tag] [dockerfile target]
function build_only {
  name=$2
  if [ "$name" = "" ] || [ "$name" = "-" ]; then
    name=$1
  fi

  # Perform build
  echos "Build: $1 ($name)"
  _docker buildx build \
    --output "type=docker" \
    --progress plain \
    --build-arg HUGO_VERSION_ARG=$(__version) \
    --tag $DOCKER_REPO:$1 \
    --file $TARGET/bundle/Dockerfile \
    --target $name \
    $TARGET/bundle/files
}

# push [tag]
function push {
  # Figure out full image identififer.
  img=$DOCKER_REPO:$(real $1)

  if [ "$CI" != "true" ]; then
    # Acually push when not in a CI environment.
    echos "       Push: $img"
    _docker push $img
  else
    # Simple logging in CI environment with debug enabled.
    if [ "${DEBUG:-false}" = "true" ]; then
      echos "       Push: $img (skipped)"
    fi

    echo $img >> $TARGET/tags
  fi
}

# real [tag]
function real {
  echo $1 | sed -e "s/\[version\]/${SOURCE_BRANCH}/g"
}

# trigger [dir]
function trigger {
  folder=$DPWD/docker/$1

  if [ ! -e "$folder/.skip" ]; then
    # Trigger steps
    for step in "build" "test"; do
      if [ -e "$folder/Step-$step" ]; then
        PART="$1:$step"

        source "$folder/Step-$step"
        echo
      fi
    done
  fi
}

function test {
  echos "TEST: $@"

  if [ "${DOCKER_DEBUG:-false}" = "false" ]; then
    result=$(_docker run --rm $2 $DOCKER_REPO:$1 $3)
    count=$(echo $result | grep "$4" | wc -l)

    if [ "$count" = "0" ]; then
      echos "> FAILED: Expected \"$4\", received:"
      echos $result

      exit 1
    else
      echos "> SUCCESS"
    fi
  fi
}

function echos {
  echo "[$PART] $@"
}


# Listing some useful commands
echos "CI: $CI"
echos "DOCKER_REPO: $DOCKER_REPO"
echos "SOURCE_BRANCH: $SOURCE_BRANCH"
echos "TARGET: $TARGET"
echo

# Prepare tags file
rm -rf $TARGET/tags $TARGET/bundle/files
mkdir -p $TARGET/bundle
cp -r $(__repo_path)/src/files $TARGET/bundle/

# Build distributions provided
for dist in ${DISTS:-$(ls $DPWD/docker | grep ^_) $(ls $DPWD/docker | grep ^[^_])}; do
  if [ -d $DPWD/docker/$dist ]; then
    trigger $dist
  fi
done